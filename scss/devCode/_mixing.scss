//============ Defaut Fonts Properties ============

//How to use defaultFont
/*
  p{  
      @include defaultFont([Se pueden incluir variables o dejar vacio]);

      @include defaultFont($fz: 16px, $fw: medium, $lh: 18px, $ta: center);

      $fz: -> [Property] -> font-size
      $fw: -> [Property] -> font-weight
      $lh: -> [Property] -> line-height
      $ta: -> [Property] -> text-align
      $c:  -> [Property] -> color
  }
*/

// el mapa de fw esta creado en _variables.scss
// la hacer modificaciones tener en cuenta _properties.scss
@mixin defaultFont($d, $ff: 'init', $fz: 'init', $fw: 'init', $lh: 'init', $ta: 'init', $c: 'init', $fs: 'init'){

  @if $d == 1 {
    @include allProperty($ff, $fz, $fw, $lh, $ta, $c, $fs);
  } @else {
    @include partiallyProperty($ff, $fz, $fw, $lh, $ta, $c, $fs);
  }

}

// Mixin para agregar todas las propiedades de las fuentes
@mixin allProperty($ff, $fz, $fw, $lh, $ta, $c, $fs){
  @if $ff == 'init' {$ff: $PlexRegular}
  @if $fz == 'init' {$fz: $font-texto}
  @if $fw == 'init' {$fw: regular}
  @if $ta == 'init' {$ta: left}
  @if $c == 'init' {$c: $fontColor}
  @if $fs == 'init' {$fs: normal}

  $FzContent: inspect($fz);
  @if ends-with($FzContent, 'px') {
    @if $lh == 'init'{
      $lh: $fz + 2;
    }
  } @else{
    @if $lh == "init"{
      $lh: initial;
    }
  }

  @if map-has-key($mapFW, $fw) {
    $fw: map-get($mapFW, $fw)
  }

  @if $fw == 100{
      $ff: $ff + '-thing'
  } @else if $fw == 200 {
      $ff: $ff + '-extraLight'
  } @else if $fw == 300 {
      $ff: $ff + '-light'
  } @else if $fw == 400 {
      $ff: $ff + '-regular'
  } @else if $fw == 500 {
      $ff: $ff + '-medium'
  } @else if $fw == 600 {
      $ff: $ff + '-semiBold'
  } @else if $fw == 700 {
      $ff: $ff + '-bold'
  }

  @if $fs == normal{
      
  } @else if $fs == italic{
      $ff: $ff + '-italic'
  }


  $ff: $ff, sans-serif;
  
  //Normal properties
  font-family: $ff;
  font-size: $fz;
  line-height: $lh;
  font-weight: $fw;
  text-align: $ta;
  font-style: $fs;
  color: $c;

}

// Mixin para agregar propiedades ralativas a las fuentes
@mixin partiallyProperty($ff, $fz, $fw, $lh, $ta, $c, $fs){
  @if map-has-key($mapFW, $fw) {
    $fw: map-get($mapFW, $fw)
  }
  
  @if $ff != 'init' {font-family: $ff}
  @if $fz != 'init' {font-size: $fz}
  @if $lh != 'init' {line-height: $lh}
  @if $ta != 'init' {text-align: $ta}
  @if $c != 'init' {color: $fontColor}
  @if $fs != 'init' {font-style: $fs}

  @if $fw != 'init' {
    font-weight: $fw;
    @if $fw == 100{
        $ff: $ff + '-thing'
    } @else if $fw == 200 {
        $ff: $ff + '-extraLight'
    } @else if $fw == 300 {
        $ff: $ff + '-light'
    } @else if $fw == 400 {
        $ff: $ff + '-regular'
    } @else if $fw == 500 {
        $ff: $ff + '-medium'
    } @else if $fw == 600 {
        $ff: $ff + '-semiBold'
    } @else if $fw == 700 {
        $ff: $ff + '-bold'
    }

    @if $fs == normal{

    } @else if $fs == italic{
        $ff: $ff + '-italic'
    }


    $ff: $ff, sans-serif;

    font-family: $ff;
  }

}


//============ End Defaut Fonts Properties ============